// Code generated by moshi-kotlin-codegen. Do not edit.
@file:Suppress("DEPRECATION", "unused", "UNUSED_PARAMETER", "ClassName", "REDUNDANT_PROJECTION",
    "RedundantExplicitType", "LocalVariableName", "RedundantVisibilityModifier",
    "PLATFORM_CLASS_MAPPED_TO_KOTLIN", "IMPLICIT_NOTHING_TYPE_ARGUMENT_IN_RETURN_POSITION")

package com.innovation.features.posts.`data`.remote.model

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import java.lang.NullPointerException
import kotlin.String
import kotlin.Suppress
import kotlin.Unit
import kotlin.collections.emptySet
import kotlin.text.buildString

public class PostDtoJsonAdapter(
  moshi: Moshi,
) : JsonAdapter<PostDto>() {
  private val options: JsonReader.Options = JsonReader.Options.of("title", "urlToImage",
      "description")

  private val nullableStringAdapter: JsonAdapter<String?> = moshi.adapter(String::class.java,
      emptySet(), "title")

  public override fun toString(): String = buildString(29) {
      append("GeneratedJsonAdapter(").append("PostDto").append(')') }

  public override fun fromJson(reader: JsonReader): PostDto {
    var title: String? = null
    var urlToImage: String? = null
    var description: String? = null
    reader.beginObject()
    while (reader.hasNext()) {
      when (reader.selectName(options)) {
        0 -> title = nullableStringAdapter.fromJson(reader)
        1 -> urlToImage = nullableStringAdapter.fromJson(reader)
        2 -> description = nullableStringAdapter.fromJson(reader)
        -1 -> {
          // Unknown name, skip it.
          reader.skipName()
          reader.skipValue()
        }
      }
    }
    reader.endObject()
    return PostDto(
        title = title,
        urlToImage = urlToImage,
        description = description
    )
  }

  public override fun toJson(writer: JsonWriter, value_: PostDto?): Unit {
    if (value_ == null) {
      throw NullPointerException("value_ was null! Wrap in .nullSafe() to write nullable values.")
    }
    writer.beginObject()
    writer.name("title")
    nullableStringAdapter.toJson(writer, value_.title)
    writer.name("urlToImage")
    nullableStringAdapter.toJson(writer, value_.urlToImage)
    writer.name("description")
    nullableStringAdapter.toJson(writer, value_.description)
    writer.endObject()
  }
}
